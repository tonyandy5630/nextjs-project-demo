{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyWork\\\\ReactJS Learn\\\\next-app-big-project\\\\pages\\\\[meetupid].js\";\nimport React from \"react\";\nimport MeetUpDetail from \"../components/meetups/MeetUpDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetUpDetails = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: \"Description at 1\",\n      image: \"https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupid: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupid;\n\n  try {\n    const client = await MongoClient.connect(\"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupCollection = db.collection(\"meetups\");\n    const selectedMeetup = await meetupCollection.findOne({\n      _id: meetupId\n    });\n    client.close();\n    return {\n      props: {\n        meetupData: selectedMeetup\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["D:/MyWork/ReactJS Learn/next-app-big-project/pages/[meetupid].js"],"names":["React","MeetUpDetail","MongoClient","MeetUpDetails","props","console","log","meetupData","title","address","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupid","toString","getStaticProps","context","meetupId","selectedMeetup","findOne","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACG,UAAN,CAAiBC,KAD1B;AAEE,MAAA,OAAO,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,OAF5B;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,wGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;;AACA,MAAI;AACF,UAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,wGADmB,CAArB;AAGA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEF,UAAMgB,cAAc,GAAG,MAAMjB,gBAAgB,CAACkB,OAAjB,CAAyB;AACpDd,MAAAA,GAAG,EAAEY;AAD+C,KAAzB,CAA7B;AAIAnB,IAAAA,MAAM,CAACS,KAAP;AACA,WAAO;AACLhB,MAAAA,KAAK,EAAE;AACLG,QAAAA,UAAU,EAAEwB;AADP;AADF,KAAP;AAKD,GAlBC,CAkBA,OAAOE,KAAP,EAAc;AACd5B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,KAAZ;AACD;AACA;AAED,eAAe9B,aAAf","sourcesContent":["import React from \"react\";\r\nimport MeetUpDetail from \"../components/meetups/MeetUpDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <React.Fragment>\r\n      <MeetUpDetail\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description='Description at 1'\r\n        image='https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg'\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupid: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupid;\r\n  try {\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n\r\n    const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupCollection.findOne({\r\n    _id: meetupId,\r\n  });\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n} catch (error) {\r\n  console.log(error);\r\n}\r\n}\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}