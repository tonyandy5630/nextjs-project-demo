{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\MyWork\\\\ReactJS Learn\\\\next-app-big-project\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_DATA = [{\n  id: \"m1\",\n  title: \"First Meetup\",\n  image: \"https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg\",\n  address: \"Some address\",\n  description: \"This is a test\"\n}, {\n  id: \"m2\",\n  title: \"First Meetup\",\n  image: \"https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg\",\n  address: \"Some address\",\n  description: \"This is a test\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => {\n        return {\n          title: meetup.title,\n          image: meetup.image,\n          address: meetup.address,\n          description: meetup.description\n        };\n      })\n    }\n  };\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_DATA,\n//     },\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["D:/MyWork/ReactJS Learn/next-app-big-project/pages/index.js"],"names":["MeetupList","MongoClient","DUMMY_DATA","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,oIAJJ;AAKEC,EAAAA,OAAO,EAAE,cALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADiB,EASjB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,oIAJJ;AAKEC,EAAAA,OAAO,EAAE,cALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CATiB,CAAnB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,wGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,IAAY;AAC/B,eAAO;AACLjB,UAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADT;AAELC,UAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAFT;AAGLC,UAAAA,OAAO,EAAEe,MAAM,CAACf,OAHX;AAILC,UAAAA,WAAW,EAAEc,MAAM,CAACd;AAJf,SAAP;AAMD,OAPQ;AADJ;AADF,GAAP;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst DUMMY_DATA = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"First Meetup\",\r\n    image:\r\n      \"https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg\",\r\n    address: \"Some address\",\r\n    description: \"This is a test\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"First Meetup\",\r\n    image:\r\n      \"https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg\",\r\n    address: \"Some address\",\r\n    description: \"This is a test\",\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupCollection.find().toArray();\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => {\r\n        return {\r\n          title: meetup.title,\r\n          image: meetup.image,\r\n          address: meetup.address,\r\n          description: meetup.description,\r\n        };\r\n      }),\r\n    },\r\n  };\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_DATA,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}