{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\MyWork\\\\ReactJS Learn\\\\next-app-big-project\\\\pages\\\\[meetupid].js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetUpDetail from \"../components/meetups/MeetUpDetail\";\n\nvar MeetUpDetails = function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description,\n      image: props.meetupData.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["D:/MyWork/ReactJS Learn/next-app-big-project/pages/[meetupid].js"],"names":["React","MeetUpDetail","MeetUpDetails","props","meetupData","title","address","description","image"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAF5B;AAGE,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG,WAHhC;AAIE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAXD;;KAAMN,a;;AAoEN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport MeetUpDetail from \"../components/meetups/MeetUpDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport { ObjectId } from \"mongodb\";\r\nconst MeetUpDetails = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <MeetUpDetail\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n        image={props.meetupData.image}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupid: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupid;\r\n\r\n  let selectedMeetup = {\r\n    meetupData: {\r\n      title: \"First Meetup\",\r\n      image:\r\n        \"https://media.architecturaldigest.com/photos/61e048de019f04fb96929319/4:3/w_3864,h_2898,c_limit/AD0222_PRESERVATION_LALBAUGH_1.jpg\",\r\n      address: \"Some address\",\r\n      description: \"This is a test\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://tonyandy5630:20112001Tu@cluster0.nm3nnu4.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n\r\n    const meetupCollection = db.collection(\"meetups\");\r\n\r\n    selectedMeetup = await meetupCollection.findOne({\r\n      _id: ObjectId(meetupId),\r\n    });\r\n\r\n    client.close();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}